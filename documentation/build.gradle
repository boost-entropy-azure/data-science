import org.asciidoctor.gradle.jvm.AsciidoctorTask
import org.asciidoctor.gradle.jvm.pdf.AsciidoctorPdfTask
import org.kordamp.gradle.livereload.LiveReloadTask

plugins {
  id 'com.github.ben-manes.versions' version '0.14.0'
  id 'org.asciidoctor.jvm.gems' version '3.1.0'
  id 'org.asciidoctor.jvm.convert' version '3.1.0'
  id 'org.asciidoctor.jvm.pdf' version '3.1.0'
  id 'org.kordamp.gradle.livereload' version '0.2.1' apply false
  id 'maven-publish'
  id 'nu.studer.credentials' version '1.0.7'
}

defaultTasks 'build' // If no task is given, default to 'build'

subprojects {
  apply plugin: 'org.asciidoctor.jvm.gems'
  apply plugin: 'org.asciidoctor.jvm.convert'
  apply plugin: 'org.asciidoctor.jvm.pdf'

  dependencies {
    asciidoctorGems 'rubygems:rouge:3.15.0'
  }

  repositories {
    mavenCentral()
    jcenter()
    ruby {
      gems()
    }
  }

  asciidoctorj {
    requires ['rouge']
    attributes 'allow-uri-read': '',
      'source-highlighter': 'rouge',
      'rouge-style': 'neo.forest',
      'currentyear': '2020',
      'imagesdir': 'images'
  }

  task convertOnlineHtml(type: AsciidoctorTask) {
    dependsOn asciidoctorGemsPrepare

    resources {
      from("${projectDir}/images") {
        include '**'
        into 'images'
      }
    }

    baseDir file("${projectDir}/docs")
    sourceDir file("${projectDir}/docs")
    outputDir file("${projectDir}/build/online")
  }

  task convertOnlinePdf(type: AsciidoctorPdfTask) {
    dependsOn asciidoctorGemsPrepare

    baseDir file("${projectDir}/docs")
    sourceDir file("${projectDir}/docs")
    outputDir file("${projectDir}/build/online")
  }

  task convert {
    dependsOn convertOnlineHtml
    dependsOn convertOnlinePdf
  }

  task liveReload(type: LiveReloadTask) {
    docRoot "${projectDir}/build"
  }

  build {
    dependsOn convert
  }
}